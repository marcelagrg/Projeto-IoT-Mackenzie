{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marce\\\\OneDrive\\\\Documentos\\\\Objetos Inteligentes\\\\projetoiot\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport mqtt from 'mqtt';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [sensorData, setSensorData] = useState(null);\n\n  // Função para criar uma instância personalizada de WebSocket\n  const createWebsocket = (url, websocketSubProtocols, options) => {\n    // Adiciona um subprotocólo customizado ou cabeçalhos extras, como um token OAuth\n    const subProtocols = [websocketSubProtocols[0],\n    // Subprotocólo padrão\n    'myCustomSubprotocolOrOAuthToken' // Exemplo de subprotocólo personalizado\n    ];\n\n    // Retorna uma nova instância de WebSocket com os subprotocolos personalizados\n    return new WebSocket(url, subProtocols);\n  };\n  useEffect(() => {\n    // Definir as opções do cliente MQTT\n    const options = {\n      clientId: 'mqttjs_' + Math.random().toString(16).substr(2, 8),\n      reconnectPeriod: 1000,\n      // 1000 ms = 1 segundo para reconectar automaticamente\n      keepalive: 60,\n      protocolId: 'MQTT',\n      protocolVersion: 4,\n      clean: true,\n      connectTimeout: 30 * 1000,\n      will: {\n        topic: 'WillMsg',\n        payload: 'Connection Closed abnormally..!',\n        qos: 0,\n        retain: false\n      },\n      createWebsocket: createWebsocket // Função de customização do WebSocket\n    };\n\n    // Conectar ao broker MQTT usando WebSocket com a URL\n    const client = mqtt.connect('ws://192.168.0.100', options);\n    client.on('connect', () => {\n      console.log('Conectado ao MQTT Broker');\n      client.subscribe('esp32/sensordata', err => {\n        if (err) {\n          console.log('Erro ao se inscrever no tópico:', err);\n        } else {\n          console.log('Inscrito no tópico \"esp32/sensordata\"');\n        }\n      });\n    });\n\n    // Evento de recebimento de mensagens\n    client.on('message', (topic, message) => {\n      console.log('Mensagem recebida:', topic, message.toString());\n\n      // Atualiza os dados recebidos no estado\n      try {\n        const data = JSON.parse(message.toString());\n        setSensorData(data);\n      } catch (err) {\n        console.error('Erro ao parsear a mensagem:', err);\n      }\n    });\n\n    // Evento de desconexão\n    client.on('close', () => {\n      console.log('Desconectado do broker MQTT');\n    });\n\n    // Função de limpeza quando o componente for desmontado\n    return () => {\n      client.end();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Conex\\xE3o MQTT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: sensorData ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Dados do Sensor:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Temperatura: \", sensorData.temperature, \" \\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Umidade: \", sensorData.humidity, \" %\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Aguardando dados do sensor...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"b5axGbR/lRweVIVqXNxgJ0XLyYk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","mqtt","jsxDEV","_jsxDEV","App","_s","sensorData","setSensorData","createWebsocket","url","websocketSubProtocols","options","subProtocols","WebSocket","clientId","Math","random","toString","substr","reconnectPeriod","keepalive","protocolId","protocolVersion","clean","connectTimeout","will","topic","payload","qos","retain","client","connect","on","console","log","subscribe","err","message","data","JSON","parse","error","end","children","fileName","_jsxFileName","lineNumber","columnNumber","temperature","humidity","_c","$RefreshReg$"],"sources":["C:/Users/marce/OneDrive/Documentos/Objetos Inteligentes/projetoiot/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport mqtt from 'mqtt';\nimport './App.css';\n\nconst App = () => {\n  const [sensorData, setSensorData] = useState(null);\n\n  // Função para criar uma instância personalizada de WebSocket\n  const createWebsocket = (url, websocketSubProtocols, options) => {\n    // Adiciona um subprotocólo customizado ou cabeçalhos extras, como um token OAuth\n    const subProtocols = [\n      websocketSubProtocols[0], // Subprotocólo padrão\n      'myCustomSubprotocolOrOAuthToken', // Exemplo de subprotocólo personalizado\n    ];\n    \n    // Retorna uma nova instância de WebSocket com os subprotocolos personalizados\n    return new WebSocket(url, subProtocols);\n  };\n\n  useEffect(() => {\n    // Definir as opções do cliente MQTT\n    const options = {\n      clientId: 'mqttjs_' + Math.random().toString(16).substr(2, 8),\n      reconnectPeriod: 1000,  // 1000 ms = 1 segundo para reconectar automaticamente\n      keepalive: 60,\n      protocolId: 'MQTT',\n      protocolVersion: 4,\n      clean: true,\n      connectTimeout: 30 * 1000,\n      will: {\n        topic: 'WillMsg',\n        payload: 'Connection Closed abnormally..!',\n        qos: 0,\n        retain: false,\n      },\n      createWebsocket: createWebsocket,  // Função de customização do WebSocket\n    };\n\n    // Conectar ao broker MQTT usando WebSocket com a URL\n    const client = mqtt.connect('ws://192.168.0.100', options);\n\n    client.on('connect', () => {\n      console.log('Conectado ao MQTT Broker');\n      client.subscribe('esp32/sensordata', (err) => {\n        if (err) {\n          console.log('Erro ao se inscrever no tópico:', err);\n        } else {\n          console.log('Inscrito no tópico \"esp32/sensordata\"');\n        }\n      });\n    });\n\n    // Evento de recebimento de mensagens\n    client.on('message', (topic, message) => {\n      console.log('Mensagem recebida:', topic, message.toString());\n\n      // Atualiza os dados recebidos no estado\n      try {\n        const data = JSON.parse(message.toString());\n        setSensorData(data);\n      } catch (err) {\n        console.error('Erro ao parsear a mensagem:', err);\n      }\n    });\n\n    // Evento de desconexão\n    client.on('close', () => {\n      console.log('Desconectado do broker MQTT');\n    });\n\n    // Função de limpeza quando o componente for desmontado\n    return () => {\n      client.end();\n    };\n  }, []);\n\n  return (\n    <div>\n      <h1>Conexão MQTT</h1>\n      <div>\n        {sensorData ? (\n          <div>\n            <h2>Dados do Sensor:</h2>\n            <p>Temperatura: {sensorData.temperature} °C</p>\n            <p>Umidade: {sensorData.humidity} %</p>\n          </div>\n        ) : (\n          <p>Aguardando dados do sensor...</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}