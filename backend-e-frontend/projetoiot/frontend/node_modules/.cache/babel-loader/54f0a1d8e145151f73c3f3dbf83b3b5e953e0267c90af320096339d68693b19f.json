{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\marce\\\\OneDrive\\\\Documentos\\\\Objetos Inteligentes\\\\projetoiot\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React from 'react';\nimport mqtt from 'mqtt/dist/mqtt';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst clientId = 'mqttjs_' + Math.random().toString(16).substr(2, 8);\nexport default function App() {\n  _s();\n  const [connectionStatus, setConnectionStatus] = React.useState(false);\n  const [messages, setMessages] = React.useState('?');\n  const host = 'wss://broker.emqx.io:8084/mqtt';\n  const options = {\n    keepalive: 60,\n    clientId: clientId,\n    protocolId: 'MQTT',\n    protocolVersion: 4,\n    clean: true,\n    reconnectPeriod: 1000,\n    connectTimeout: 30 * 1000,\n    will: {\n      topic: 'WillMsg',\n      payload: 'Connection Closed abnormally..!',\n      qos: 0,\n      retain: false\n    }\n  };\n  useEffect(() => {\n    console.log('Connecting mqtt client.');\n    const client = mqtt.connect(host, options);\n    client.on('connect', () => {\n      console.log(\"Connected!!!\");\n      setConnectionStatus(true);\n      client.subscribe('CASA/temperatura1');\n    });\n    client.on('message', (topic, payload, packet) => {\n      setMessages(payload.toString());\n      console.log('New message: ' + payload.toString());\n    });\n  }, []);\n  console.log('Connections: ' + connectionStatus);\n  console.log('Messages: ' + messages);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Temperatura: \", messages && messages]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"QPnGVJPVfPRArCG+0tWXvyUcVHI=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","mqtt","useEffect","jsxDEV","_jsxDEV","clientId","Math","random","toString","substr","App","_s","connectionStatus","setConnectionStatus","useState","messages","setMessages","host","options","keepalive","protocolId","protocolVersion","clean","reconnectPeriod","connectTimeout","will","topic","payload","qos","retain","console","log","client","connect","on","subscribe","packet","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/marce/OneDrive/Documentos/Objetos Inteligentes/projetoiot/frontend/src/App.js"],"sourcesContent":["import './App.css'\nimport React from 'react'\n\n\nimport mqtt from 'mqtt/dist/mqtt'\nimport { useEffect } from 'react'\n\nconst clientId = 'mqttjs_' + Math.random().toString(16).substr(2, 8)\n\nexport default function App() {\n  const [connectionStatus, setConnectionStatus] = React.useState(false)\n  const [messages, setMessages] = React.useState('?')\n\n  const host = 'wss://broker.emqx.io:8084/mqtt'\n\n  const options = {\n    keepalive: 60,\n    clientId: clientId,\n    protocolId: 'MQTT',\n    protocolVersion: 4,\n    clean: true,\n    reconnectPeriod: 1000,\n    connectTimeout: 30 * 1000,\n    will: {\n      topic: 'WillMsg',\n      payload: 'Connection Closed abnormally..!',\n      qos: 0,\n      retain: false\n    }\n  }\n  \n\n  useEffect(() => {\n    console.log('Connecting mqtt client.')\n    const client = mqtt.connect(host, options)\n    client.on('connect', () => {\n      console.log(\"Connected!!!\")\n      setConnectionStatus(true)\n      client.subscribe('CASA/temperatura1')\n    })\n\n    client.on('message', (topic, payload, packet) => {\n      setMessages(payload.toString())\n      console.log('New message: ' + payload.toString())\n    })\n  }, [])\n\n  console.log('Connections: ' + connectionStatus)\n  console.log('Messages: '+messages)\n\n  return (\n \n      <div>\n        <div>Temperatura: {messages && messages}</div>\n      </div>\n \n  )\n}\n\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,KAAK,MAAM,OAAO;AAGzB,OAAOC,IAAI,MAAM,gBAAgB;AACjC,SAASC,SAAS,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,QAAQ,GAAG,SAAS,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC;AAEpE,eAAe,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGb,KAAK,CAACc,QAAQ,CAAC,KAAK,CAAC;EACrE,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,KAAK,CAACc,QAAQ,CAAC,GAAG,CAAC;EAEnD,MAAMG,IAAI,GAAG,gCAAgC;EAE7C,MAAMC,OAAO,GAAG;IACdC,SAAS,EAAE,EAAE;IACbd,QAAQ,EAAEA,QAAQ;IAClBe,UAAU,EAAE,MAAM;IAClBC,eAAe,EAAE,CAAC;IAClBC,KAAK,EAAE,IAAI;IACXC,eAAe,EAAE,IAAI;IACrBC,cAAc,EAAE,EAAE,GAAG,IAAI;IACzBC,IAAI,EAAE;MACJC,KAAK,EAAE,SAAS;MAChBC,OAAO,EAAE,iCAAiC;MAC1CC,GAAG,EAAE,CAAC;MACNC,MAAM,EAAE;IACV;EACF,CAAC;EAGD3B,SAAS,CAAC,MAAM;IACd4B,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;IACtC,MAAMC,MAAM,GAAG/B,IAAI,CAACgC,OAAO,CAAChB,IAAI,EAAEC,OAAO,CAAC;IAC1Cc,MAAM,CAACE,EAAE,CAAC,SAAS,EAAE,MAAM;MACzBJ,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;MAC3BlB,mBAAmB,CAAC,IAAI,CAAC;MACzBmB,MAAM,CAACG,SAAS,CAAC,mBAAmB,CAAC;IACvC,CAAC,CAAC;IAEFH,MAAM,CAACE,EAAE,CAAC,SAAS,EAAE,CAACR,KAAK,EAAEC,OAAO,EAAES,MAAM,KAAK;MAC/CpB,WAAW,CAACW,OAAO,CAACnB,QAAQ,CAAC,CAAC,CAAC;MAC/BsB,OAAO,CAACC,GAAG,CAAC,eAAe,GAAGJ,OAAO,CAACnB,QAAQ,CAAC,CAAC,CAAC;IACnD,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAENsB,OAAO,CAACC,GAAG,CAAC,eAAe,GAAGnB,gBAAgB,CAAC;EAC/CkB,OAAO,CAACC,GAAG,CAAC,YAAY,GAAChB,QAAQ,CAAC;EAElC,oBAEIX,OAAA;IAAAiC,QAAA,eACEjC,OAAA;MAAAiC,QAAA,GAAK,eAAa,EAACtB,QAAQ,IAAIA,QAAQ;IAAA;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAGZ;AAAC9B,EAAA,CAhDuBD,GAAG;AAAAgC,EAAA,GAAHhC,GAAG;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}